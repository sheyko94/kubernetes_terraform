name: backend
on: 
  push:
    branches: ["main"]
    paths:
      - 'services/backend-service/**'
      - '.github/workflows/backend.yml'
env:
  BACKEND_NAME: "backend-service"
  BACKEND_PATH: "services/backend-service"
  HELM_PATH: "services/backend-service/helm"
  AWS_ECR_ACCOUNT_URL: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      
      - uses: actions/checkout@v4.1.6

      - name: Mvn Install
        run: |
          cd $BACKEND_PATH
          mvn install -DskipTests --settings .m2/settings.xml

      - name: Mvn Test
        run: |
          cd $BACKEND_PATH
          mvn test --settings .m2/settings.xml

      - name: Upload build Artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: $BACKEND_NAME-artifact
          path: |
            ${{ env.BACKEND_PATH }}
            infrastructure/helm

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Download build artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: $BACKEND_NAME-artifact
          
      - name: Display structure of downloaded files
        run: ls -R

      - name: Docker Build
        run: |
          cd $BACKEND_PATH
          docker build -t $BACKEND_NAME .
          
      - name: ECR Publish
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}
          aws configure set output json
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $AWS_ECR_ACCOUNT_URL
          docker tag $BACKEND_NAME:latest $AWS_ECR_ACCOUNT_URL/$BACKEND_NAME:latest
          docker push $AWS_ECR_ACCOUNT_URL/$BACKEND_NAME:latest

  helm:
    runs-on: ubuntu-latest
    needs: build
    steps:
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: $BACKEND_NAME-artifact
        
      - name: Display structure of downloaded files
        run: ls -R

      - name: Helm Dependency Build
        run: helm dependency build $HELM_PATH

      - name: Helm Lint
        run: helm lint $HELM_PATH
